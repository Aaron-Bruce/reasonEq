BEGIN THEORY Equiv
DEPS = []
KNOWN = VD (fromList [],fromList [],fromList [])
SUBABLE = fromList [(Id "equiv",CS)]
BEGIN LIST LAWS
(("true",(K P (VB True),[])),Axiom)
(("equiv_refl",(C P (Id "equiv") [V P (VR (Id "P",VP,WS)),V P (VR (Id "P",VP,WS))],[])),Axiom)
(("equiv_assoc",(C P (Id "equiv") [C P (Id "equiv") [C P (Id "equiv") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],V P (VR (Id "R",VP,WS))],C P (Id "equiv") [V P (VR (Id "P",VP,WS)),C P (Id "equiv") [V P (VR (Id "Q",VP,WS)),V P (VR (Id "R",VP,WS))]]],[])),Axiom)
(("equiv_symm",(C P (Id "equiv") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS)),V P (VR (Id "Q",VP,WS)),V P (VR (Id "P",VP,WS))],[])),Axiom)
(("equiv_id",(C P (Id "equiv") [C P (Id "equiv") [K P (VB True),V P (VR (Id "Q",VP,WS))],V P (VR (Id "Q",VP,WS))],[])),Proven "equiv_id")
END LIST LAWS
BEGIN LIST PROOFS
("equiv_id",(C P (Id "equiv") [C P (Id "equiv") [K P (VB True),V P (VR (Id "Q",VP,WS))],V P (VR (Id "Q",VP,WS))],[]),"reduce",(K P (VB True),[(UseLaw (ByMatch (ME [1])) "equiv_assoc" (BD (fromList [((Id "P",VP),BT (K P (VB True))),((Id "Q",VP),BV (VR (Id "Q",VP,WS))),((Id "R",VP),BV (VR (Id "Q",VP,WS)))],fromList [],fromList [])) [],(C P (Id "equiv") [C P (Id "equiv") [K P (VB True),V P (VR (Id "Q",VP,WS))],V P (VR (Id "Q",VP,WS))],[])),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P",VP),BV (VR (Id "Q",VP,WS)))],fromList [],fromList [])) [2],(C P (Id "equiv") [K P (VB True),C P (Id "equiv") [V P (VR (Id "Q",VP,WS)),V P (VR (Id "Q",VP,WS))]],[])),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P",VP),BT (K P (VB True)))],fromList [],fromList [])) [],(C P (Id "equiv") [K P (VB True),K P (VB True)],[]))]))
END LIST PROOFS
BEGIN LIST CONJECTURES
END LIST CONJECTURES
END THEORY Equiv
