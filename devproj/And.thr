BEGIN THEORY And
DEPS = ["Or","Not","Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
SUBABLE = fromList [(Id "land",CS)]
BEGIN LIST LAWS
(("golden-rule",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],C P (Id "equiv") [C P (Id "equiv") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],C P (Id "lor") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))]]],[])),Axiom)
END LIST LAWS
BEGIN LIST PROOFS
("land_subst",(C P (Id "equiv") [S P (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),C P (Id "land") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),S P (V P (VR (Id "Q",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))]))]],[]),"reduce",(K P (VB True),[(Substitute [1],(C P (Id "equiv") [S P (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),C P (Id "land") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),S P (V P (VR (Id "Q",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))]))]],[])),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P",VP),BT (C P (Id "land") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),S P (V P (VR (Id "Q",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))]))]))],fromList [],fromList [])) [],(C P (Id "equiv") [C P (Id "land") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),S P (V P (VR (Id "Q",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))]))],C P (Id "land") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))])),S P (V P (VR (Id "Q",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[]))]))]],[]))]))
END LIST PROOFS
BEGIN LIST CONJECTURES
("land_symm",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],C P (Id "land") [V P (VR (Id "Q",VP,WS)),V P (VR (Id "P",VP,WS))]],[]))
("land_assoc",(C P (Id "equiv") [C P (Id "land") [C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],V P (VR (Id "R",VP,WS))],C P (Id "land") [V P (VR (Id "P",VP,WS)),C P (Id "land") [V P (VR (Id "Q",VP,WS)),V P (VR (Id "R",VP,WS))]]],[]))
("land_idem",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "P",VP,WS))],V P (VR (Id "P",VP,WS))],[]))
("land_unit",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),K P (VB True)],V P (VR (Id "P",VP,WS))],[]))
("land_zero",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),K P (VB False)],K P (VB False)],[]))
("land_land_distr",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),C P (Id "land") [V P (VR (Id "Q",VP,WS)),V P (VR (Id "R",VP,WS))]],C P (Id "land") [C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "R",VP,WS))]]],[]))
("contradiction",(C P (Id "equiv") [C P (Id "land") [V P (VR (Id "P",VP,WS)),C P (Id "lnot") [V P (VR (Id "P",VP,WS))]],K P (VB False)],[]))
END LIST CONJECTURES
END THEORY And
