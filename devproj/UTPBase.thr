BEGIN THEORY UTPBase
DEPS = ["UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"]
KNOWN = VD (fromList [(VR (Id ":=" 0,VP,WS),KV (TF (TV (Id "t" 0)) (TF (TV (Id "t" 0)) (TG (Id "B" 0))))),(VR (Id ";" 0,VP,WS),KV (TF (TG (Id "B" 0)) (TF (TG (Id "B" 0)) (TG (Id "B" 0))))),(VR (Id "II" 0,VP,WS),KV (TG (Id "B" 0))),(VR (Id "bot" 0,VP,WS),KV (TG (Id "B" 0))),(VR (Id "cond" 0,VP,WS),KV (TF (TG (Id "B" 0)) (TF (TG (Id "B" 0)) (TF (TG (Id "B" 0)) (TG (Id "B" 0)))))),(VR (Id "sqcap" 0,VP,WS),KV (TF (TG (Id "B" 0)) (TF (TG (Id "B" 0)) (TG (Id "B" 0))))),(VR (Id "sqsupseteq" 0,VP,WS),KV (TF (TG (Id "B" 0)) (TF (TG (Id "B" 0)) (TG (Id "B" 0))))),(VR (Id "top" 0,VP,WS),KV (TG (Id "B" 0)))],fromList [],fromList [((Id "O" 0,VO),DS (fromList []) (fromList []) (fromList []) 0)])
SUBABLE = fromList [(Id "cond" 0,CS)]
BEGIN LIST LAWS
(("sqsupseteq_def",(C P (Id "equiv" 0) [C P (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],X (Id "[_]" 0) (C P (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])],([],fromList []))),Axiom)
(("cond_def",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "lor" 0) [C P (Id "land" 0) [V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "P" 0,VP,WS))],C P (Id "land" 0) [C P (Id "lnot" 0) [V P (VR (Id "b" 0,VP,WB))],V P (VR (Id "Q" 0,VP,WS))]]],([],fromList []))),Axiom)
((";_def",(C P (Id "equiv" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],B P (Id "exists" 0) (fromList [GL (LV (VR (Id "O" 0,VO,WD "m"),[],[]))]) (C P (Id "land" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WD "m"),[],[]))])),S P (V P (VR (Id "Q" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "O" 0,VO,WB),[],[]),LV (VR (Id "O" 0,VO,WD "m"),[],[]))]))])],([],fromList [GL (LV (VR (Id "O" 0,VO,WD "m"),[],[]))]))),Axiom)
((":=_def",(C P (Id "equiv" 0) [C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB))],C P (Id "land" 0) [C P (Id "=" 0) [V (E T) (VR (Id "x" 0,VO,WA)),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB))],I P (Id "land" 0) (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[Id "x" 0],[]),LV (VR (Id "O" 0,VO,WB),[Id "x" 0],[])]]],([],fromList []))),Axiom)
(("II_def",(C P (Id "equiv" 0) [V P (VR (Id "II" 0,VP,WS)),I P (Id "land" 0) (Id "=" 0) [LV (VR (Id "O" 0,VO,WA),[],[]),LV (VR (Id "O" 0,VO,WB),[],[])]],([],fromList []))),Axiom)
(("sqcap_def",(C P (Id "equiv" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "lor" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],([],fromList []))),Axiom)
(("bot_def",(C P (Id "equiv" 0) [V P (VR (Id "bot" 0,VP,WS)),K P (VB True)],([],fromList []))),Axiom)
(("top_def",(C P (Id "equiv" 0) [V P (VR (Id "top" 0,VP,WS)),K P (VB False)],([],fromList []))),Axiom)
END LIST LAWS
BEGIN LIST PROOFS
END LIST PROOFS
BEGIN LIST CONJECTURES
("sqsupseteq_lor_distr",(C P (Id "equiv" 0) [C P (Id "sqsupseteq" 0) [C P (Id "lor" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))],C P (Id "land" 0) [C P (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))],C P (Id "sqsupseteq" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("sqsupseteq_trans",(C P (Id "implies" 0) [C P (Id "land" 0) [C P (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "sqsupseteq" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
("cond_idem",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
("cond_symm",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),C P (Id "lnot" 0) [V P (VR (Id "b" 0,VP,WB))],V P (VR (Id "P" 0,VP,WS))]],([],fromList [])))
("cond_assoc",(C P (Id "equiv" 0) [C P (Id "cond" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "c" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))],C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "land" 0) [V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "c" 0,VP,WB))],C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "c" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("cond_distr",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "c" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "cond" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "c" 0,VP,WB)),C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("cond_runit",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB True),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
("cond_lunit",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),K P (VB False),V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
("cond_absorb",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
("cond_merge",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "c" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))]],C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "lor" 0) [V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "c" 0,VP,WB))],V P (VR (Id "Q" 0,VP,WS))]],([],fromList [])))
("cond_mdistr",(C P (Id "equiv" 0) [C P (Id "cond" 0) [C P (Id "star" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "b" 0,VP,WB)),C P (Id "star" 0) [V P (VR (Id "R" 0,VP,WS)),V P (VR (Id "S" 0,VP,WS))]],C P (Id "star" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))],C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "S" 0,VP,WS))]]],([],fromList [])))
("cond_alt_def",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "land" 0) [C P (Id "implies" 0) [V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "P" 0,VP,WS))],C P (Id "implies" 0) [C P (Id "lnot" 0) [V P (VR (Id "b" 0,VP,WB))],V P (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))
("cond_alt_def2",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "equiv" 0) [C P (Id "lor" 0) [C P (Id "lnot" 0) [V P (VR (Id "b" 0,VP,WB))],V P (VR (Id "P" 0,VP,WS))],C P (Id "lor" 0) [V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))
(";_assoc",(C P (Id "equiv" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P (Id ";" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(";_cond_l_distr",(C P (Id "equiv" 0) [C P (Id ";" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))],C P (Id "cond" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))],V P (VR (Id "b" 0,VP,WB)),C P (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
(":=_seq_same",(C P (Id "equiv" 0) [C P (Id ";" 0) [C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB))],C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),V (E (TG (Id "Z" 0))) (VR (Id "f" 0,VE,WB))]],C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),S (E T) (V (E (TG (Id "Z" 0))) (VR (Id "f" 0,VE,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB)))]) (fromList []))]],([],fromList [])))
(":=_seq_cond",(C P (Id "equiv" 0) [C P (Id ";" 0) [C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB))],C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))]],C P (Id "cond" 0) [C P (Id ";" 0) [C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB))],V P (VR (Id "P" 0,VP,WS))],S (E T) (V P (VR (Id "b" 0,VP,WB))) (SN (fromList [(VR (Id "x" 0,VO,WB),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB)))]) (fromList [])),C P (Id ";" 0) [C P (Id ":=" 0) [V (E T) (VR (Id "x" 0,VE,WS)),V (E (TG (Id "Z" 0))) (VR (Id "e" 0,VE,WB))],V P (VR (Id "Q" 0,VP,WS))]]],([],fromList [])))
(";_runit",(C P (Id "equiv" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "II" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
(";_lunit",(C P (Id "equiv" 0) [C P (Id ";" 0) [V P (VR (Id "II" 0,VP,WS)),V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
("sqcap_symm",(C P (Id "equiv" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "sqcap" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "P" 0,VP,WS))]],([],fromList [])))
("sqcap_assoc",(C P (Id "equiv" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "sqcap" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "sqcap" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
("sqcap_idem",(C P (Id "equiv" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
("sqcap_distr",(C P (Id "equiv" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "sqcap" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "sqcap" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("cond_sqcap_distr",(C P (Id "equiv" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),C P (Id "sqcap" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "sqcap" 0) [C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "Q" 0,VP,WS))],C P (Id "cond" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
(";_sqcap_ldistr",(C P (Id "equiv" 0) [C P (Id ";" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))],C P (Id "sqcap" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))],C P (Id ";" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
(";_sqcap_rdistr",(C P (Id "equiv" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "sqcap" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "sqcap" 0) [C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P (Id ";" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
("sqcap_cond_distr",(C P (Id "equiv" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "cond" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "b" 0,VP,WB)),V P (VR (Id "R" 0,VP,WS))]],C P (Id "cond" 0) [C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "b" 0,VP,WB)),C P (Id "sqcap" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]],([],fromList [])))
END LIST CONJECTURES
END THEORY UTPBase
