BEGIN THEORY PredUniv
DEPS = ["PredExists","PredAxioms","Equality","PropSubst","PropImpl","PropMixOne","PropConj","PropDisj","PropNot","PropEquiv","PropAxioms"]
KNOWN = VD (fromList [],fromList [],fromList [])
BEGIN LIST LAWS
(("[]_def",(C P (Id "equiv") [X (Id "[_]") (V P (VR (Id "P",VP,WS))),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS)))],[ESS (GV (VR (Id "P",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])])),Axiom)
(("=_def",(C P (Id "equiv") [C P (Id "=") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))],X (Id "[_]") (C P (Id "equiv") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))])],[])),Axiom)
(("univ_true",(C P (Id "equiv") [X (Id "[_]") (K P (VB True)),K P (VB True)],[])),Proven "univ_true")
(("land_[]_distr",(C P (Id "equiv") [C P (Id "land") [X (Id "[_]") (V P (VR (Id "P",VP,WS))),X (Id "[_]") (V P (VR (Id "Q",VP,WS)))],X (Id "[_]") (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))])],[])),Proven "land_[]_distr")
END LIST LAWS
BEGIN LIST PROOFS
("land_[]_distr",(C P (Id "equiv") [C P (Id "land") [X (Id "[_]") (V P (VR (Id "P",VP,WS))),X (Id "[_]") (V P (VR (Id "Q",VP,WS)))],X (Id "[_]") (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))])],[]),"reduce",(K P (VB True),[(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P",VP),BT (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))]))],fromList [],fromList [])) [2],(C P (Id "equiv") [C P (Id "land") [X (Id "[_]") (V P (VR (Id "P",VP,WS))),X (Id "[_]") (V P (VR (Id "Q",VP,WS)))],X (Id "[_]") (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))])],[])),(UseLaw (ByMatch (ME [1])) "forall_land_distr" (BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS))),((Id "Q",VP),BV (VR (Id "Q",VP,WS)))],fromList [],fromList [((Id "x",VO,[],[]),BS (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]))])) [2],(C P (Id "equiv") [C P (Id "land") [X (Id "[_]") (V P (VR (Id "P",VP,WS))),X (Id "[_]") (V P (VR (Id "Q",VP,WS)))],B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (C P (Id "land") [V P (VR (Id "P",VP,WS)),V P (VR (Id "Q",VP,WS))])],[SS (GV (VR (Id "P",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]),SS (GV (VR (Id "Q",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])])),(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS)))],fromList [],fromList [])) [1,1],(C P (Id "equiv") [C P (Id "land") [X (Id "[_]") (V P (VR (Id "P",VP,WS))),X (Id "[_]") (V P (VR (Id "Q",VP,WS)))],C P (Id "land") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS))),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "Q",VP,WS)))]],[SS (GV (VR (Id "P",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]),SS (GV (VR (Id "Q",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])])),(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P",VP),BV (VR (Id "Q",VP,WS)))],fromList [],fromList [])) [1,2],(C P (Id "equiv") [C P (Id "land") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS))),X (Id "[_]") (V P (VR (Id "Q",VP,WS)))],C P (Id "land") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS))),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "Q",VP,WS)))]],[SS (GV (VR (Id "P",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]),SS (GV (VR (Id "Q",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])])),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P",VP),BT (C P (Id "land") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS))),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "Q",VP,WS)))]))],fromList [],fromList [])) [],(C P (Id "equiv") [C P (Id "land") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS))),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "Q",VP,WS)))],C P (Id "land") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS))),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (V P (VR (Id "Q",VP,WS)))]],[SS (GV (VR (Id "P",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]),SS (GV (VR (Id "Q",VP,WS))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))]))
("univ_true",(C P (Id "equiv") [X (Id "[_]") (K P (VB True)),K P (VB True)],[]),"reduce",(K P (VB True),[(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P",VP),BT (K P (VB True)))],fromList [],fromList [])) [1],(C P (Id "equiv") [X (Id "[_]") (K P (VB True)),K P (VB True)],[])),(UseLaw (ByMatch (ME [1])) "forall_true" (BD (fromList [],fromList [],fromList [((Id "x",VO,[],[]),BS (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]))])) [1],(C P (Id "equiv") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (K P (VB True)),K P (VB True)],[])),(UseLaw (ByMatch (ME [1])) "equiv_id" (BD (fromList [((Id "Q",VP),BT (K P (VB True)))],fromList [],fromList [])) [],(C P (Id "equiv") [K P (VB True),K P (VB True)],[]))]))
END LIST PROOFS
BEGIN LIST CONJECTURES
("[]_idem",(C P (Id "equiv") [X (Id "[_]") (X (Id "[_]") (V P (VR (Id "P",VP,WS)))),X (Id "[_]") (V P (VR (Id "P",VP,WS)))],[]))
("univ_False",(C P (Id "equiv") [X (Id "[_]") (K P (VB False)),K P (VB False)],[]))
("univ_forall_closed",(C P (Id "equiv") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (X (Id "[_]") (V P (VR (Id "P",VP,WS)))),X (Id "[_]") (V P (VR (Id "P",VP,WS)))],[]))
("univ_exists_closed",(C P (Id "equiv") [B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))]) (X (Id "[_]") (V P (VR (Id "P",VP,WS)))),X (Id "[_]") (V P (VR (Id "P",VP,WS)))],[]))
END LIST CONJECTURES
END THEORY PredUniv
