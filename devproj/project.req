BEGIN REQSTATE
BEGIN REQSET
MMD = 40
END REQSET
BEGIN SIGNATURE
TRUE = K P (VB True)
FALSE = K P (VB False)
EQV = Id "equiv" 0
IMP = Id "implies" 0
AND = Id "land" 0
OR = Id "lor" 0
END SIGNATURE
BEGIN THEORIES
THNAMES = ["And","AndOrInvert","Equality","Equiv","Exists","ForAll","Implies","Not","Or","UClose","UTPBase"]
SDAG = [[("UTPBase",["UClose","Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("UClose",["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Exists",["ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("ForAll",["Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Equality",["Implies","Equiv"])],[("Implies",["AndOrInvert","And","Or","Not","Equiv"])],[("AndOrInvert",["And","Or","Not","Equiv"])],[("And",["Or","Not","Equiv"])],[("Or",["Not","Equiv"])],[("Not",["Equiv"])],[("Equiv",[])]]
END THEORIES
CURRTHEORY = UTPBase
BEGIN LIVE-PROOFS
BEGIN MAP LIVE-PROOFS
("UTPBase","sqsupseteq_trans")
BEGIN LIVE-PROOF
TH-NAME: UTPBase
CJ-NAME: sqsupseteq_trans
CONJ = ASN (C P True (Id "implies" 0) [C P True (Id "land" 0) [C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P False (Id "sqsupseteq" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList []))
SIDE = ([],fromList [])
STRAT reduce
BEGIN SEQZIP
TERMZIP = (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))],[Cls' (Id "[_]" 0),Cons' P True (Id "lor" 0) [X (Id "langle_rangle" 0) (C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "land" 0) [V P (VR (Id "Q" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "R" 0,VP,WS))]]])] []])
BEGIN SEQUENT'
SIDECOND = ([],fromList [])
LAWS' = CLaws' {hyp0 = Theory {thName = "H.sqsupseteq_trans", thDeps = [], known = VD (fromList [],fromList [],fromList []), laws = [], proofs = [], conjs = []}, whichC = Lft, otherC = K P (VB True)}
END SEQUENT'
END SEQZIP
FPATH: [2,1]
BEGIN LIST STEPS
(UseLaw (ByMatch (ME [1])) "implies_def2" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "implies" 0,VP),BV (VR (Id "implies" 0,VP,WS)))],fromList [],fromList [])) [2,1],ASN (C P True (Id "lor" 0) [X (Id "langle_rangle" 0) (C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "land" 0) [V P (VR (Id "Q" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "R" 0,VP,WS))]]]),X (Id "[_]" 0) (C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))])],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "sqsupseteq_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "sqsupseteq" 0,VP),BV (VR (Id "sqsupseteq" 0,VP,WS)))],fromList [],fromList [])) [2],ASN (C P True (Id "lor" 0) [X (Id "langle_rangle" 0) (C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "land" 0) [V P (VR (Id "Q" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "R" 0,VP,WS))]]]),C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [2])) "sat_def" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "land" 0) [V P (VR (Id "Q" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "R" 0,VP,WS))]]])),((Id "lnot" 0,VP),BV (VR (Id "lnot" 0,VP,WS)))],fromList [],fromList [])) [1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "land" 0) [V P (VR (Id "Q" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "lnot_invol" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "lnot" 0,VP),BV (VR (Id "lnot" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1,2,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "land" 0) [C P True (Id "lnot" 0) [C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "lnot" 0) [V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "deMorgan_lor" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))])),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "lnot" 0,VP),BV (VR (Id "lnot" 0,VP,WS))),((Id "lor" 0,VP),BV (VR (Id "lor" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1,2],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))],V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "implies_def2" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "implies" 0,VP),BV (VR (Id "implies" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1,2,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "lnot" 0) [C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "lnot_invol" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "lnot" 0,VP),BV (VR (Id "lnot" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1,1,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "land" 0) [C P True (Id "lnot" 0) [C P True (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))]],C P True (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "lnot" 0) [C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "deMorgan_lor" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))])),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "lnot" 0,VP),BV (VR (Id "lnot" 0,VP,WS))),((Id "lor" 0,VP),BV (VR (Id "lor" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "lnot" 0) [C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "implies_def2" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "implies" 0,VP),BV (VR (Id "implies" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1,1,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lor" 0) [C P True (Id "lnot" 0) [C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P True (Id "lnot" 0) [C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "deMorgan_land" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])),((Id "Q" 0,VP),BT (C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))])),((Id "land" 0,VP),BV (VR (Id "land" 0,VP,WS))),((Id "lnot" 0,VP),BV (VR (Id "lnot" 0,VP,WS)))],fromList [],fromList [])) [1,1,1,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [C P True (Id "lnot" 0) [C P True (Id "land" 0) [C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [2])) "lnot_invol" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "land" 0) [C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]))],fromList [],fromList [])) [1,1,1],ASN (C P True (Id "lor" 0) [C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "land" 0) [C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "implies_def2" (BD (fromList [((Id "P" 0,VP),BT (X (Id "[_]" 0) (C P True (Id "land" 0) [C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]))),((Id "Q" 0,VP),BT (C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))])),((Id "implies" 0,VP),BV (VR (Id "implies" 0,VP,WS)))],fromList [],fromList [])) [],ASN (C P True (Id "implies" 0) [X (Id "[_]" 0) (C P True (Id "land" 0) [C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]]),C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "land_[]_distr" (BD (fromList [((Id "P" 0,VP),BT (C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])),((Id "Q" 0,VP),BT (C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))])),((Id "land" 0,VP),BV (VR (Id "land" 0,VP,WS)))],fromList [],fromList [])) [1],ASN (C P True (Id "implies" 0) [C P True (Id "land" 0) [X (Id "[_]" 0) (C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),X (Id "[_]" 0) (C P True (Id "implies" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))])],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "sqsupseteq_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "R" 0,VP,WS))),((Id "sqsupseteq" 0,VP),BV (VR (Id "sqsupseteq" 0,VP,WS)))],fromList [],fromList [])) [1,2],ASN (C P True (Id "implies" 0) [C P True (Id "land" 0) [X (Id "[_]" 0) (C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),C P False (Id "sqsupseteq" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
(UseLaw (ByMatch (ME [1])) "sqsupseteq_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS))),((Id "sqsupseteq" 0,VP),BV (VR (Id "sqsupseteq" 0,VP,WS)))],fromList [],fromList [])) [1,1],ASN (C P True (Id "implies" 0) [C P True (Id "land" 0) [C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))],C P False (Id "sqsupseteq" 0) [V P (VR (Id "Q" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],C P False (Id "sqsupseteq" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "R" 0,VP,WS))]],([],fromList [])))
END LIST STEPS
END LIVE-PROOF
END MAP LIVE-PROOFS
END LIVE-PROOFS
END REQSTATE
