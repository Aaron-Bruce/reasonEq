BEGIN REQSTATE
BEGIN REQSET
MMD = 40
END REQSET
BEGIN SIGNATURE
TRUE = K P (VB True)
FALSE = K P (VB False)
EQV = Id "equiv"
IMP = Id "implies"
AND = Id "land"
OR = Id "lor"
END SIGNATURE
BEGIN THEORIES
THNAMES = ["And","AndOrInvert","Equality","Equiv","Exists","ForAll","Implies","Not","Or"]
SDAG = [[("Exists",["ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("ForAll",["Equality","Implies","AndOrInvert","And","Or","Not","Equiv"])],[("Implies",["AndOrInvert","And","Or","Not","Equiv"])],[("AndOrInvert",["And","Or","Not","Equiv"])],[("And",["Or","Not","Equiv"])],[("Or",["Not","Equiv"])],[("Not",["Equiv"])],[("Equality",[]),("Equiv",[])]]
END THEORIES
CURRTHEORY = Exists
BEGIN LIVE-PROOFS
BEGIN MAP LIVE-PROOFS
("Exists","exists_subst")
BEGIN LIVE-PROOF
TH-NAME: Exists
CJ-NAME: exists_subst
CONJ = (C P (Id "equiv") [S P (B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS)))) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])])
SIDE = [SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]
STRAT reduce
BEGIN SEQZIP
TERMZIP = (S P (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),[Cons' P (Id "equiv") [] [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (C P (Id "lnot") [V P (VR (Id "P",VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))]])
BEGIN SEQUENT'
SIDECOND = [SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]
LAWS' = CLaws' {hyp0 = Theory {thName = "H.exists_subst", thDeps = [], known = VD (fromList [],fromList [],fromList []), laws = [], proofs = [], conjs = []}, whichC = Lft, otherC = K P (VB True)}
END SEQUENT'
END SEQZIP
FPATH: [1]
BEGIN LIST STEPS
(UseLaw (ByMatch (ME [2])) "lnot_subst" (BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS)))],fromList [],fromList [((Id "e",VE,[],[]),BX [] [LV (VR (Id "f",VE,WS),[],[])]),((Id "x",VO,[],[]),BL [GL (LV (VR (Id "z",VO,WS),[],[]))])])) [2,1],(C P (Id "equiv") [S P (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))]))])],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))
(UseLaw (ByMatch (ME [1])) "lnot_invol" (BD (fromList [((Id "P",VP),BT (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))]))])))],fromList [],fromList [])) [2],(C P (Id "equiv") [S P (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),C P (Id "lnot") [C P (Id "lnot") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))]))])]]],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))
(UseLaw (ByMatch (ME [1])) "exists_def" (BD (fromList [((Id "P",VP),BT (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))]))))],fromList [],fromList [((Id "x",VO,[],[]),BS (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]))])) [2,1],(C P (Id "equiv") [S P (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),C P (Id "lnot") [B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))]],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))
(UseLaw (ByMatch (ME [1])) "lnot_equiv_swap" (BD (fromList [((Id "P",VP),BT (S P (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))),((Id "Q",VP),BT (B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))))],fromList [],fromList [])) [],(C P (Id "equiv") [C P (Id "lnot") [S P (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))]))],B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))
(UseLaw (ByMatch (ME [1])) "lnot_subst" (BD (fromList [((Id "P",VP),BT (B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])))],fromList [],fromList [((Id "e",VE,[],[]),BX [] [LV (VR (Id "e",VE,WS),[],[]),LV (VR (Id "f",VE,WS),[],[])]),((Id "x",VO,[],[]),BL [GL (LV (VR (Id "y",VO,WS),[],[])),GL (LV (VR (Id "z",VO,WS),[],[]))])])) [1],(C P (Id "equiv") [S P (C P (Id "lnot") [B P (Id "forall") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (C P (Id "lnot") [V P (VR (Id "P",VP,WS))])]) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))
(UseLaw (ByMatch (ME [1])) "exists_def" (BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS)))],fromList [],fromList [((Id "x",VO,[],[]),BS (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]))])) [1,1],(C P (Id "equiv") [S P (B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (V P (VR (Id "P",VP,WS)))) (SN (fromList []) (fromList [(LV (VR (Id "y",VO,WS),[],[]),LV (VR (Id "e",VE,WS),[],[])),(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])),B P (Id "exists") (fromList [GL (LV (VR (Id "x",VO,WS),[],[])),GL (LV (VR (Id "y",VO,WS),[],[]))]) (S P (V P (VR (Id "P",VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "z",VO,WS),[],[]),LV (VR (Id "f",VE,WS),[],[]))])))],[SD (GL (LV (VR (Id "z",VO,WS),[],[]))) (fromList [GL (LV (VR (Id "x",VO,WS),[],[]))])]))
END LIST STEPS
END LIVE-PROOF
END MAP LIVE-PROOFS
END LIVE-PROOFS
END REQSTATE
