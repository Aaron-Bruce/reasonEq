BEGIN THEORY Not
DEPS = ["Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
SUBABLE = fromList [(Id "lnot" 0,CS)]
BEGIN LIST LAWS
(("false_def",(C P (Id "equiv" 0) [K P (VB False),C P (Id "lnot" 0) [K P (VB True)]],[])),Axiom)
(("lnot_equiv_distr",(C P (Id "equiv" 0) [C P (Id "lnot" 0) [C P (Id "equiv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]],C P (Id "equiv" 0) [C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))]],[])),Axiom)
END LIST LAWS
BEGIN LIST PROOFS
END LIST PROOFS
BEGIN LIST CONJECTURES
("lnot_equiv_swap",(C P (Id "equiv" 0) [C P (Id "equiv" 0) [C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))],V P (VR (Id "Q" 0,VP,WS))],C P (Id "equiv" 0) [V P (VR (Id "P" 0,VP,WS)),C P (Id "lnot" 0) [V P (VR (Id "Q" 0,VP,WS))]]],[]))
("lnot_invol",(C P (Id "equiv" 0) [C P (Id "lnot" 0) [C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))]],V P (VR (Id "P" 0,VP,WS))],[]))
("false_neg",(C P (Id "equiv" 0) [C P (Id "lnot" 0) [K P (VB False)],K P (VB True)],[]))
("lnot_def",(C P (Id "equiv" 0) [C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))],C P (Id "equiv" 0) [V P (VR (Id "P" 0,VP,WS)),K P (VB False)]],[]))
("false_subst",(C P (Id "equiv" 0) [S P (K P (VB False)) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),K P (VB False)],[]))
("lnot_subst",(C P (Id "equiv" 0) [S P (C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))]) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])),C P (Id "lnot" 0) [S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))]))]],[]))
END LIST CONJECTURES
END THEORY Not
