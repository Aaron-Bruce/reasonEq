BEGIN THEORY Exists
DEPS = ["ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
SUBABLE = fromList []
BEGIN LIST LAWS
(("exists_def",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),C P (Id "lnot" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))])]],[])),Axiom)
(("exists_remove",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])])),Proven "exists_remove")
(("exists_false",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (K P (VB False)),K P (VB False)],[])),Proven "exists_false")
END LIST LAWS
BEGIN LIST PROOFS
("exists_false",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (K P (VB False)),K P (VB False)],[]),"redinit",(K P (VB False),[(UseLaw (ByMatch (ME [1])) "exists_remove" (BD (fromList [((Id "P" 0,VP),BT (K P (VB False)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]))])) [],(B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (K P (VB False)),[]))]))
("exists_remove",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])]),"reduce",(K P (VB True),[(UseLaw (ByMatch (ME [1])) "exists_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]))])) [1],(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])])),(UseLaw (ByMatch (ME [1])) "forall_remove" (BD (fromList [((Id "P" 0,VP),BT (C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))]))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]))])) [1,1],(C P (Id "equiv" 0) [C P (Id "lnot" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))])],V P (VR (Id "P" 0,VP,WS))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])])),(UseLaw (ByMatch (ME [1])) "lnot_invol" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [1],(C P (Id "equiv" 0) [C P (Id "lnot" 0) [C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))]],V P (VR (Id "P" 0,VP,WS))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])])),(UseLaw (ByMatch MA) "equiv_refl" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [])) [],(C P (Id "equiv" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "P" 0,VP,WS))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])]))]))
END LIST PROOFS
BEGIN LIST CONJECTURES
("exists_one_point",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[])),GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (C P (Id "land" 0) [I P (Id "land" 0) (Id "=" 0) [LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[])],V P (VR (Id "P" 0,VP,WS))]),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))])))],[SD (GL (LV (VR (Id "e" 0,VE,WS),[],[]))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])]))
("exists_lor_distr",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (C P (Id "lor" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),C P (Id "lor" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "Q" 0,VP,WS)))]],[]))
("land_exists_scope",(C P (Id "equiv" 0) [C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[])),GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (V P (VR (Id "Q" 0,VP,WS)))],B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (V P (VR (Id "Q" 0,VP,WS)))])],[SD (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])]))
("exists_gen",(C P (Id "implies" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VE,WS),[],[]))]))),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[])),GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS)))],[]))
("exists_alpha_rename",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),B P (Id "exists" 0) (fromList [GL (LV (VR (Id "y" 0,VO,WS),[],[]))]) (S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "y" 0,VO,WS),[],[]))])))],[SD (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "y" 0,VO,WS),[],[]))])]))
END LIST CONJECTURES
END THEORY Exists
