BEGIN THEORY UClose
DEPS = ["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
BEGIN LIST LAWS
(("[]_def",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS)))],([SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])],fromList []))),Axiom)
(("sat_def",ASN (C P True (Id "equiv" 0) [X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))),C P True (Id "lnot" 0) [X (Id "[_]" 0) (C P True (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))])]],([],fromList []))),Axiom)
(("univ_id_on_closed",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])],fromList []))),Proven "univ_id_on_closed")
(("univ_true",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (K P (VB True)),K P (VB True)],([],fromList []))),Proven "univ_true")
(("univ_False",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (K P (VB False)),K P (VB False)],([],fromList []))),Proven "univ_False")
(("[]_idem",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList []))),Proven "[]_idem")
END LIST LAWS
BEGIN LIST PROOFS
("[]_idem",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList [])),"redinit",(X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),[(UseLaw (ByMatch MEL) "univ_id_on_closed" (BD (fromList [((Id "P" 0,VP),BT (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))))],fromList [],fromList [])) [],ASN (X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),([],fromList [])))]))
("univ_False",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (K P (VB False)),K P (VB False)],([],fromList [])),"redinit",(K P (VB False),[(UseLaw (ByMatch MEL) "[]_def" (BD (fromList [((Id "P" 0,VP),BT (K P (VB False)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))])])) [],ASN (X (Id "[_]" 0) (K P (VB False)),([],fromList []))),(UseLaw (ByMatch MEL) "forall_remove" (BD (fromList [((Id "P" 0,VP),BT (K P (VB False)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))]))])) [],ASN (B P (Id "forall" 0) (fromList [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))]) (K P (VB False)),([],fromList [])))]))
("univ_true",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (K P (VB True)),K P (VB True)],([],fromList [])),"redinit",(K P (VB True),[(UseLaw (ByMatch MEL) "[]_def" (BD (fromList [((Id "P" 0,VP),BT (K P (VB True)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))])])) [],ASN (X (Id "[_]" 0) (K P (VB True)),([],fromList []))),(UseLaw (ByMatch MEL) "forall_remove" (BD (fromList [((Id "P" 0,VP),BT (K P (VB True)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))]))])) [],ASN (B P (Id "forall" 0) (fromList [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))]) (K P (VB True)),([],fromList [])))]))
("univ_id_on_closed",ASN (C P True (Id "equiv" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])],fromList [])),"redinit",(V P (VR (Id "P" 0,VP,WS)),[(UseLaw (ByMatch MEL) "[]_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))])])) [],ASN (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),([SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])],fromList []))),(UseLaw (ByMatch MEL) "forall_remove" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))]))])) [],ASN (B P (Id "forall" 0) (fromList [GL (LV (VR (Id "?x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),([SS (GV (VR (Id "P" 0,VP,WS))) (fromList [])],fromList [])))]))
END LIST PROOFS
BEGIN LIST CONJECTURES
("land_[]_distr",ASN (C P True (Id "equiv" 0) [C P True (Id "land" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))],X (Id "[_]" 0) (C P True (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])],([],fromList [])))
("univ_forall_closed",ASN (C P True (Id "equiv" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList [])))
("univ_exists_closed",ASN (C P True (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],([],fromList [])))
("univ_inst",ASN (C P True (Id "implies" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],([],fromList [])))
("univ_inst_gen",ASN (C P True (Id "implies" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),S P (V P (VR (Id "P" 0,VP,WS))) (SN (fromList []) (fromList [(LV (VR (Id "x" 0,VO,WS),[],[]),LV (VR (Id "e" 0,VO,WS),[],[]))]))],([],fromList [])))
("univ_mono",ASN (C P True (Id "implies" 0) [X (Id "[_]" 0) (C P True (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),C P True (Id "implies" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))]],([],fromList [])))
("necessary_poss",ASN (C P True (Id "implies" 0) [X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))))],([],fromList [])))
END LIST CONJECTURES
END THEORY UClose
