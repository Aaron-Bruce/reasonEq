BEGIN THEORY UClose
DEPS = ["Exists","ForAll","Equality","Implies","AndOrInvert","And","Or","Not","Equiv"]
KNOWN = VD (fromList [],fromList [],fromList [])
SUBABLE = fromList []
BEGIN LIST LAWS
(("[]_def",(C P (Id "equiv" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS)))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])),Axiom)
(("sat_def",(C P (Id "equiv" 0) [X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))),C P (Id "lnot" 0) [X (Id "[_]" 0) (C P (Id "lnot" 0) [V P (VR (Id "P" 0,VP,WS))])]],[])),Axiom)
(("land_[]_distr",(C P (Id "equiv" 0) [C P (Id "land" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))],X (Id "[_]" 0) (C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])],[])),Proven "land_[]_distr")
(("[]_idem",(C P (Id "equiv" 0) [X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],[])),Proven "[]_idem")
END LIST LAWS
BEGIN LIST PROOFS
("[]_idem",(C P (Id "equiv" 0) [X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],[]),"redinit",(X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),[(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P" 0,VP),BT (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])) [],(X (Id "[_]" 0) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),[])),(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])) [1],(B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),[])),(NestSimp [],(B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS)))),[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])),(UseLaw (ByMatch (ME [2])) "[]_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]))])) [],(B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])]))]))
("land_[]_distr",(C P (Id "equiv" 0) [C P (Id "land" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))],X (Id "[_]" 0) (C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))])],[]),"redinit",(X (Id "[_]" 0) (C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),[(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])) [1],(C P (Id "land" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))],[])),(UseLaw (ByMatch (ME [1])) "[]_def" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "Q" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BL [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])) [2],(C P (Id "land" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])),(UseLaw (ByMatch (ME [2])) "forall_land_distr" (BD (fromList [((Id "P" 0,VP),BV (VR (Id "P" 0,VP,WS))),((Id "Q" 0,VP),BV (VR (Id "Q" 0,VP,WS)))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]))])) [],(C P (Id "land" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "P" 0,VP,WS))),B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (V P (VR (Id "Q" 0,VP,WS)))],[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]),SS (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])])),(UseLaw (ByMatch (ME [2])) "[]_def" (BD (fromList [((Id "P" 0,VP),BT (C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]))],fromList [],fromList [((Id "x" 0,VO,[],[]),BS (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]))])) [],(B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (C P (Id "land" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),[SS (GV (VR (Id "P" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]),SS (GV (VR (Id "Q" 0,VP,WS))) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))])]))]))
END LIST PROOFS
BEGIN LIST CONJECTURES
("univ_true",(C P (Id "equiv" 0) [X (Id "[_]" 0) (K P (VB True)),K P (VB True)],[]))
("univ_False",(C P (Id "equiv" 0) [X (Id "[_]" 0) (K P (VB False)),K P (VB False)],[]))
("univ_forall_closed",(C P (Id "equiv" 0) [B P (Id "forall" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],[]))
("univ_exists_closed",(C P (Id "equiv" 0) [B P (Id "exists" 0) (fromList [GL (LV (VR (Id "x" 0,VO,WS),[],[]))]) (X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))),X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS)))],[]))
("univ_inst",(C P (Id "implies" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),V P (VR (Id "P" 0,VP,WS))],[]))
("univ_mono",(C P (Id "implies" 0) [X (Id "[_]" 0) (C P (Id "implies" 0) [V P (VR (Id "P" 0,VP,WS)),V P (VR (Id "Q" 0,VP,WS))]),C P (Id "implies" 0) [X (Id "[_]" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (V P (VR (Id "Q" 0,VP,WS)))]],[]))
("necessary_poss",(C P (Id "implies" 0) [X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))),X (Id "[_]" 0) (X (Id "langle_rangle" 0) (V P (VR (Id "P" 0,VP,WS))))],[]))
END LIST CONJECTURES
END THEORY UClose
