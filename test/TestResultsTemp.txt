vtS_Design
{ ok : ùîπ, ok' : ùîπ, x : ‚Ñ§, x' : ‚Ñ§, y : ‚Ñ§, y' : ‚Ñ§, z : ‚Ñ§, z' : ‚Ñ§ }
{  }
{ M ‚âú {ok}, O ‚âú {MÃÖ,SÃÖ}, S ‚âú {x,y,z} }

bindVV gvp gvp $ bindVV gvq gvq $ bindLS gO gO $ bindLS gO' gO' $ bindLS gOm gOm $ emptyBinding
{ (P.ùìü) ‚Ü¶ P., (Q.ùìü) ‚Ü¶ Q. }
{ m ‚Ü¶ m }
{ (O$.ùìû) ‚Ü¶ {OÃÖ} }

tMatch [vtS_Design] emptyBinding S.empty S.empty eOpAqm eOpAqm
(‚àÉ OÃÖ_m ‚Ä¢ (P.[,OÃÖ_m/OÃÖ']‚àßQ.[,OÃÖ_m/OÃÖ])) :: (‚àÉ OÃÖ_m ‚Ä¢ (P.[,OÃÖ_m/OÃÖ']‚àßQ.[,OÃÖ_m/OÃÖ]))

M.vsP=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
M.vsP'=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.vsP=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.kvsP=fromList []
M.vsC=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
M.vsC'=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.kslP'=[]
FM.uvsP=fromList []
UM.uvsP=fromList []
FM.klCommonP=[GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.vsC''=fromList []
KMa.vsC=fromList []
UM.vsC=fromList []
FM.ulsP=fromList []
UM.ulsP=fromList []

M.vsP=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
M.vsC=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
M.vsP'=fromList []
FM.vsP=fromList []
FM.kvsP=fromList []
M.vsC'=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
FM.kslP'=[]
FM.uvsP=fromList []
UM.uvsP=fromList []
FM.klCommonP=[]
FM.vsC''=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
KMa.vsC=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
UM.vsC=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
FM.ulsP=fromList []
UM.ulsP=fromList []
*** Exception: user error (vsUnknownMatch: not enough general pattern variables
vsC  = fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
uvsP = fromList []
ulsP = fromList []
bind:
      BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS)))
                   ,((Id "Q",VP),BV (VR (Id "Q",VP,WS)))]
         ,fromList [("m","m")]
         ,fromList [((Id "O",VO,[],[])
                    ,BS (fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]))])
)

tMatch [vtS_Design] emptyBinding S.empty S.empty (endO2mid "m" p) (endO2mid "m" p)
P.[,OÃÖ_m/OÃÖ'] :: P.[,OÃÖ_m/OÃÖ']

{ (P.ùìü) ‚Ü¶ P. }
{ m ‚Ü¶ m }
{ (O$.ùìû) ‚Ü¶ {OÃÖ} }

M.vsP=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
M.vsP'=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.vsP=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.kvsP=fromList []
M.vsC=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
M.vsC'=fromList [GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.kslP'=[]
FM.uvsP=fromList []
UM.uvsP=fromList []
FM.klCommonP=[GL (LV (VR (Id "O",VO,WA),[],[]))]
FM.vsC''=fromList []
KMa.vsC=fromList []
UM.vsC=fromList []
FM.ulsP=fromList []
UM.ulsP=fromList []
BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS)))],fromList [("m","m")],fromList [((Id "O",VO,[],[]),BS (fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]))])

tMatch [vtS_Design] emptyBinding S.empty S.empty (begO2mid "m" p) (begO2mid "m" p)
P.[,OÃÖ_m/OÃÖ] :: P.[,OÃÖ_m/OÃÖ]

{ (P.ùìü) ‚Ü¶ P. }
{ m ‚Ü¶ m }
{ (O$.ùìû) ‚Ü¶ {OÃÖ} }


M.vsP=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
M.vsP'=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
FM.vsP=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
FM.kvsP=fromList []
M.vsC=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
M.vsC'=fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]
FM.kslP'=[]
FM.uvsP=fromList []
UM.uvsP=fromList []
FM.klCommonP=[GL (LV (VR (Id "O",VO,WB),[],[]))]
FM.vsC''=fromList []
KMa.vsC=fromList []
UM.vsC=fromList []
FM.ulsP=fromList []
UM.ulsP=fromList []
BD (fromList [((Id "P",VP),BV (VR (Id "P",VP,WS)))],fromList [("m","m")],fromList [((Id "O",VO,[],[]),BS (fromList [GL (LV (VR (Id "O",VO,WB),[],[]))]))])


---
