vsMatch [vtS_Design] emptyBinding S.empty S.empty (lswrap [lMn,lSn]) (lswrap [lOm])
{MÃÖ_n,SÃÖ_n} :: {OÃÖ_m}


bindLVarToVSet lOm (lswrap [lMn,lSn]) emptyBinding
{  }
{ m ‚Ü¶ n }
{ (O$.ùìû) ‚Ü¶ {MÃÖ,SÃÖ} }


vtS_Design
{ ok : ùîπ, ok' : ùîπ, x : ‚Ñ§, x' : ‚Ñ§, y : ‚Ñ§, y' : ‚Ñ§, z : ‚Ñ§, z' : ‚Ñ§ }
{  }
{ M ‚âú {ok}, O ‚âú {MÃÖ,SÃÖ}, S ‚âú {x,y,z} }


M.vsP=fromList [GL (LV (VR (Id "O",VO,WD "m"),[],[]))]
M.vsP'=fromList [GL (LV (VR (Id "O",VO,WD "m"),[],[]))]
FM.vsP=fromList [GL (LV (VR (Id "O",VO,WD "m"),[],[]))]
FM.kvsP=fromList []
M.vsC=fromList [GL (LV (VR (Id "M",VO,WD "n"),[],[])),GL (LV (VR (Id "S",VO,WD "n"),[],[]))]
M.vsC'=fromList [GL (LV (VR (Id "M",VO,WD "n"),[],[])),GL (LV (VR (Id "S",VO,WD "n"),[],[]))]
FM.kslP'=[GL (LV (VR (Id "O",VO,WD "m"),[],[]))]
KM.lvP=LV (VR (Id "O",VO,WD "m"),[],[])
KM.expKnwn=Just (KS (fromList [GL (LV (VR (Id "M",VO,WD "m"),[],[])),GL (LV (VR (Id "S",VO,WD "m"),[],[]))]) (fromList [VR (Id "ok",VO,WD "m"),VR (Id "x",VO,WD "m"),VR (Id "y",VO,WD "m"),VR (Id "z",VO,WD "m")]) 4,[],[])
EM.xP=(fromList [VR (Id "ok",VO,WD "m"),VR (Id "x",VO,WD "m"),VR (Id "y",VO,WD "m"),VR (Id "z",VO,WD "m")],[],[],4)
FM.klCommonP=[]
FM.vsC''=fromList [GL (LV (VR (Id "M",VO,WD "n"),[],[])),GL (LV (VR (Id "S",VO,WD "n"),[],[]))]
KMb.vsC=fromList [GL (LV (VR (Id "M",VO,WD "n"),[],[])),GL (LV (VR (Id "S",VO,WD "n"),[],[]))]
EM.vsC=fromList [GL (LV (VR (Id "M",VO,WD "n"),[],[])),GL (LV (VR (Id "S",VO,WD "n"),[],[]))]
EM.vC=GL (LV (VR (Id "M",VO,WD "n"),[],[]))
EM.xC=(fromList [VR (Id "ok",VO,WD "n")],[],[],1)
*** Exception: user error (vsShrinkPatnMatch: cannot shrink rigid pattern expansion)

---
