Matching case studies

x,y,z :: u,S\u      ~>   u |-> x,          S\u  |-> y,z
x,y,z :: S\u,u      ~>   u |-> z,          S\u  |-> x,y
y,z,x :: S\u,u      ~>   u |-> z,          S\u  |-> x,y
x,y,z :: u,v,S\uv   ~>   u |-> x, v |-> y, S\uv |-> z
x,y,z :: S\uv,u,v   ~>   u |-> y, v |-> z, S\uv |-> x
x,y,z :: u,S\uv,v   ~>   u |-> x, v |-> z, S\uv |-> y
z,y,x :: u,S\uv,v   ~>   u |-> z, v |-> x, S\uv |-> y

x,y,z :: u,S\u    =>  x::u, giving u |-> x and ...
  y,z :: S\u      =>  expand S\u and ...
  y,z :: x,y,z\u  =>  expand gc1 = y , save z.C and ...
      y ::2 x,y,z\u  =>  P-sub, giving u |-> x and ...
      y ::2 y,z      =>  succeeds, returning z.P, keeping y
    z :: z        => succeeds, keeping z,y, S\u |-> y,z

x,y,z :: S\u,u    =>  expand S\u saving u.P and ...
x,y,z :: x,y,z\u  =>  expand gc1=x, save y,z.C and ...
      x ::2 x,y,z\u  => succeeds, returning y,z\u.P, keeping x
  y,z :: y,z\u    =>  expand gc2=y, save z.C and ...
      y ::2 y,z\u   => succeeds, returning z\u.P, keeping y,x
    z :: z\u      =>  done with S\u,  S\u -> x,y, restore u.P and ...
    z :: u        =>  succeeds giving u |-> z

y,z,x :: S\u,u    =>  expand S\u saving u.P and ...
y,z,x :: x,y,z\u  =>  expand gc1=y, save z.x.C and ...
      y ::2 x,y,z\u  =>  P-sub, giving u |-> x and ...
      y ::2 y,z      =>  succeeds, returning z.P, keeping y
  z,x ::


x,y,z :: u,S\uv,v  =>  x::u giving u |-> x and ...
  y,z :: S\uv,v    =>  expand S\uv, saving v.P and ...
  y,z :: x,y,z\uv  =>  expand gc1 = y, save z.C and ...
      -- this works because u comes first out of \uv here !!!
      y ::2 x,y,z\uv  =>  P-sub, giving u |-> x and ...
      y ::2 y,z\v     =>  succeeds, returning z\v.P, keeping y
    z :: z\v       =>  done with S\uv, S\uv |-> y, restore v.P and ...
    z :: v         =>  succeedds giving v |-> z

z,y,x :: u,S\uv,v  =>  z::u giving u |-> z and ...

  y,x :: S\uv,v    =>  expand S\uv, saving v.P and ...
  y,x :: x,y,z\uv  =>  expand gc1 = y, save x.C and ...
      -- this works because u comes first out of \uv here !!!
      y ::2 x,y,z\uv  =>  P-sub, giving u |-> x and ... CRASH

--
